@page "/atendimento/criar"
@inject IAtendimentoService atendimentoService
@inject IAuthService authService
@inject NavigationManager navManager

<AuthorizeView>
    <Authorized>
        <EditForm Model="Atendimento" Context="FormContext" OnValidSubmit="Criar" FormName="AtendimentoForm" class="form-div">
            <div class="form-label">Criar atendimento</div>
            <div style="margin-bottom: 20px;">
                <div style="font-size: 1.2rem;">
                    <label>Numero</label>
                </div>
                <div>
                    <InputText @bind-Value="Atendimento.Numero" class="form-input" />
                </div>
            </div>
            <div>
                <div style="font-size: 1.2rem;">
                    <label>Versão</label>
                </div>
                <div>
                    <InputText @bind-Value="Atendimento.Versao" class="form-input" />
                </div>
            </div>
            <div>
                <div style="font-size: 1.2rem;">
                    <label>Descrição</label>
                </div>
                <div>
                    <InputText @bind-Value="Atendimento.Descricao" class="form-input" />
                </div>
            </div>
            <div style="text-align: center; margin: 10px 0;">
                <button class="primary-button">Salvar</button>
            </div>
        </EditForm>
    </Authorized>
</AuthorizeView>

@code {
    [SupplyParameterFromForm]
    private AtendimentoModel Atendimento { get; set; } = new();

    private async Task Criar()
    {
        string? userId = authService.GetTokenClaimValue(TokenClaimTypes.ID);

        if (!string.IsNullOrEmpty(userId))
        {
            Atendimento.UserId = Guid.Parse(userId!);
        }

        string? resultado = await atendimentoService.Add(Atendimento);

        if (resultado is null)
        {
            navManager.NavigateTo("/atendimentos"); 
        }
    }
}
